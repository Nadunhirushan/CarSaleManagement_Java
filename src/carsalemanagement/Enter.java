/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carsalemanagement;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.regex.*;
/**
 *
 * @author Dell
 */
public class Enter extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame1
     * */
    ResultSet rs,rs_regno,rs_id,rs_vehicle,rs_owner,rs_vehicle1;
    PreparedStatement pst,pst_regno,pst_id,pst_vehicle,pst_owner,pst_vehicle1;
    Connection con = null;
    
    public Enter() {
        initComponents();
        regnot.requestFocus();
        createConnection();
        autorefNo();
    }
    
    public void autorefNo(){
         try {
             Statement s = con.createStatement();
             ResultSet rs = s.executeQuery("Select Max(RefNo) from enter ");
             rs.next();
             
             rs.getString("Max(RefNo)");
             
             if(rs.getString("Max(RefNo)")==null){
                 refnot.setText("C00001");
             }
             else{
                 Long RefNo= Long.parseLong(rs.getString("Max(RefNo)").substring(2,rs.getString("Max(RefNo)").length()));
                 RefNo++;
                 refnot.setText("C" + String.format("%05d", RefNo));
             }
         } catch (SQLException ex) {
             Logger.getLogger(Enter.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    
    void createConnection(){
        String className = "com.mysql.cj.jdbc.Driver";
        try {
            Class.forName(className);
            System.out.println("Driver loaded Successfully");
            
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/abc","root","9823Nan@831");
            System.out.println("Connection Successfull");
      
        } catch (ClassNotFoundException ex) {
            System.out.println("Driver loding Failed");
            System.out.println(ex.getMessage());
        } catch (SQLException ex) {
            System.out.println("Connection Failed");
            System.out.println(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        regnot = new javax.swing.JTextField();
        categoryt = new javax.swing.JTextField();
        maket = new javax.swing.JTextField();
        modelt = new javax.swing.JTextField();
        manuyt = new javax.swing.JTextField();
        regyt = new javax.swing.JTextField();
        milaget = new javax.swing.JTextField();
        pricet = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        regnolab = new javax.swing.JLabel();
        makelab = new javax.swing.JLabel();
        modellab = new javax.swing.JLabel();
        manuylab = new javax.swing.JLabel();
        regylab = new javax.swing.JLabel();
        milagelab = new javax.swing.JLabel();
        pricelab = new javax.swing.JLabel();
        categorylab = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        nict = new javax.swing.JTextField();
        addresst = new javax.swing.JTextField();
        tpt = new javax.swing.JTextField();
        datet = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        refnot = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        text7 = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();
        jSeparator15 = new javax.swing.JSeparator();
        namet1 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        home = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        save = new javax.swing.JLabel();
        niclab = new javax.swing.JLabel();
        namelab = new javax.swing.JLabel();
        addresslab = new javax.swing.JLabel();
        telelab = new javax.swing.JLabel();
        datelab = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(73, 31, 61));
        jPanel1.setPreferredSize(new java.awt.Dimension(375, 400));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Reg. No.");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Category");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Make");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 216, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Model");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 286, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Manu. Year.");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 352, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Reg. Year.");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 422, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Milage");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 492, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Price");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 558, -1, -1));

        regnot.setBackground(new java.awt.Color(73, 31, 61));
        regnot.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        regnot.setForeground(new java.awt.Color(165, 165, 165));
        regnot.setText("NN-NNNN, LL-NNNN, LLLNNNN");
        regnot.setToolTipText("");
        regnot.setBorder(null);
        regnot.setCaretColor(new java.awt.Color(255, 255, 255));
        regnot.setMinimumSize(new java.awt.Dimension(7, 21));
        regnot.setPreferredSize(new java.awt.Dimension(7, 21));
        regnot.setSelectionColor(new java.awt.Color(255, 255, 255));
        regnot.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                regnotFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                regnotFocusLost(evt);
            }
        });
        regnot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regnotMouseClicked(evt);
            }
        });
        regnot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regnotActionPerformed(evt);
            }
        });
        regnot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                regnotKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                regnotKeyReleased(evt);
            }
        });
        jPanel1.add(regnot, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 300, 20));

        categoryt.setBackground(new java.awt.Color(73, 31, 61));
        categoryt.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        categoryt.setForeground(new java.awt.Color(165, 165, 165));
        categoryt.setToolTipText("");
        categoryt.setBorder(null);
        categoryt.setCaretColor(new java.awt.Color(255, 255, 255));
        categoryt.setPreferredSize(new java.awt.Dimension(7, 21));
        categoryt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                categorytFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                categorytFocusLost(evt);
            }
        });
        categoryt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorytActionPerformed(evt);
            }
        });
        categoryt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                categorytKeyPressed(evt);
            }
        });
        jPanel1.add(categoryt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 176, 300, 20));

        maket.setBackground(new java.awt.Color(73, 31, 61));
        maket.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        maket.setForeground(new java.awt.Color(165, 165, 165));
        maket.setBorder(null);
        maket.setCaretColor(new java.awt.Color(255, 255, 255));
        maket.setPreferredSize(new java.awt.Dimension(7, 21));
        maket.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                maketFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                maketFocusLost(evt);
            }
        });
        maket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maketActionPerformed(evt);
            }
        });
        maket.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                maketKeyPressed(evt);
            }
        });
        jPanel1.add(maket, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 246, 300, 20));

        modelt.setBackground(new java.awt.Color(73, 31, 61));
        modelt.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        modelt.setForeground(new java.awt.Color(165, 165, 165));
        modelt.setBorder(null);
        modelt.setCaretColor(new java.awt.Color(255, 255, 255));
        modelt.setPreferredSize(new java.awt.Dimension(7, 21));
        modelt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                modeltFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                modeltFocusLost(evt);
            }
        });
        modelt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeltActionPerformed(evt);
            }
        });
        modelt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                modeltKeyPressed(evt);
            }
        });
        jPanel1.add(modelt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 312, 300, 20));

        manuyt.setBackground(new java.awt.Color(73, 31, 61));
        manuyt.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        manuyt.setForeground(new java.awt.Color(165, 165, 165));
        manuyt.setText("YYYY");
        manuyt.setBorder(null);
        manuyt.setCaretColor(new java.awt.Color(255, 255, 255));
        manuyt.setPreferredSize(new java.awt.Dimension(7, 21));
        manuyt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                manuytFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                manuytFocusLost(evt);
            }
        });
        manuyt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manuytActionPerformed(evt);
            }
        });
        manuyt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                manuytKeyPressed(evt);
            }
        });
        jPanel1.add(manuyt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 382, 300, 20));

        regyt.setBackground(new java.awt.Color(73, 31, 61));
        regyt.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        regyt.setForeground(new java.awt.Color(165, 165, 165));
        regyt.setText("YYYY");
        regyt.setBorder(null);
        regyt.setCaretColor(new java.awt.Color(255, 255, 255));
        regyt.setPreferredSize(new java.awt.Dimension(7, 21));
        regyt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                regytFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                regytFocusLost(evt);
            }
        });
        regyt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                regytKeyPressed(evt);
            }
        });
        jPanel1.add(regyt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 452, 300, 20));

        milaget.setBackground(new java.awt.Color(73, 31, 61));
        milaget.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        milaget.setForeground(new java.awt.Color(165, 165, 165));
        milaget.setBorder(null);
        milaget.setCaretColor(new java.awt.Color(255, 255, 255));
        milaget.setPreferredSize(new java.awt.Dimension(7, 21));
        milaget.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                milagetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                milagetFocusLost(evt);
            }
        });
        milaget.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                milagetKeyPressed(evt);
            }
        });
        jPanel1.add(milaget, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 518, 300, 20));

        pricet.setBackground(new java.awt.Color(73, 31, 61));
        pricet.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        pricet.setForeground(new java.awt.Color(165, 165, 165));
        pricet.setBorder(null);
        pricet.setCaretColor(new java.awt.Color(255, 255, 255));
        pricet.setPreferredSize(new java.awt.Dimension(7, 21));
        pricet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pricetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pricetFocusLost(evt);
            }
        });
        pricet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pricetKeyPressed(evt);
            }
        });
        jPanel1.add(pricet, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 584, 300, 20));

        jLabel13.setFont(new java.awt.Font("Tekton Pro Ext", 0, 60)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 204, 204));
        jLabel13.setText("ABC");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 60));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(153, 153, 153));
        jLabel16.setText("Vehicle  ");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 604, 300, 20));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 196, 300, 20));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 266, 300, 20));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 332, 300, 20));
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 402, 300, 20));
        jPanel1.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 472, 300, 20));
        jPanel1.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 538, 300, 20));
        jPanel1.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 300, 20));

        regnolab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        regnolab.setForeground(new java.awt.Color(255, 204, 204));
        jPanel1.add(regnolab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 180, 30));

        makelab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        makelab.setForeground(new java.awt.Color(255, 204, 204));
        jPanel1.add(makelab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 180, 30));

        modellab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        modellab.setForeground(new java.awt.Color(255, 204, 204));
        jPanel1.add(modellab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 180, 30));

        manuylab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        manuylab.setForeground(new java.awt.Color(255, 204, 204));
        jPanel1.add(manuylab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 350, 180, 30));

        regylab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        regylab.setForeground(new java.awt.Color(255, 204, 204));
        jPanel1.add(regylab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 180, 30));

        milagelab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        milagelab.setForeground(new java.awt.Color(255, 204, 204));
        jPanel1.add(milagelab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 490, 180, 30));

        pricelab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        pricelab.setForeground(new java.awt.Color(255, 204, 204));
        jPanel1.add(pricelab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 550, 180, 30));

        categorylab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        categorylab.setForeground(new java.awt.Color(255, 204, 204));
        jPanel1.add(categorylab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 180, 30));

        jPanel2.setBackground(new java.awt.Color(189, 76, 84));
        jPanel2.setPreferredSize(new java.awt.Dimension(375, 400));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nict.setBackground(new java.awt.Color(189, 76, 84));
        nict.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        nict.setForeground(new java.awt.Color(191, 191, 191));
        nict.setToolTipText("");
        nict.setBorder(null);
        nict.setCaretColor(new java.awt.Color(255, 255, 255));
        nict.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nictFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nictFocusLost(evt);
            }
        });
        nict.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nictKeyPressed(evt);
            }
        });
        jPanel2.add(nict, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 176, 300, -1));

        addresst.setBackground(new java.awt.Color(189, 76, 84));
        addresst.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        addresst.setForeground(new java.awt.Color(191, 191, 191));
        addresst.setToolTipText("");
        addresst.setBorder(null);
        addresst.setCaretColor(new java.awt.Color(255, 255, 255));
        addresst.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addresstFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                addresstFocusLost(evt);
            }
        });
        addresst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addresstActionPerformed(evt);
            }
        });
        addresst.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addresstKeyPressed(evt);
            }
        });
        jPanel2.add(addresst, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 308, 300, -1));

        tpt.setBackground(new java.awt.Color(189, 76, 84));
        tpt.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tpt.setForeground(new java.awt.Color(191, 191, 191));
        tpt.setText("0XXXXXXXXX OR +94XXXXXXXXX");
        tpt.setToolTipText("");
        tpt.setBorder(null);
        tpt.setCaretColor(new java.awt.Color(255, 255, 255));
        tpt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tptFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tptFocusLost(evt);
            }
        });
        tpt.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                tptAncestorResized(evt);
            }
        });
        tpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tptActionPerformed(evt);
            }
        });
        tpt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tptKeyPressed(evt);
            }
        });
        jPanel2.add(tpt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 378, 300, -1));

        datet.setBackground(new java.awt.Color(189, 76, 84));
        datet.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        datet.setForeground(new java.awt.Color(191, 191, 191));
        datet.setText("YYYY-MM-DD");
        datet.setToolTipText("");
        datet.setBorder(null);
        datet.setCaretColor(new java.awt.Color(255, 255, 255));
        datet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                datetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                datetFocusLost(evt);
            }
        });
        datet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datetActionPerformed(evt);
            }
        });
        datet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                datetKeyPressed(evt);
            }
        });
        jPanel2.add(datet, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 444, 300, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("X");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 5, -1, 20));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("NIC");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Name");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 216, -1, -1));

        jLabel23.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Address");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 282, -1, -1));

        jLabel24.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Telephone");
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 348, -1, -1));

        jLabel25.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Date");
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 418, -1, -1));

        jLabel15.setBackground(new java.awt.Color(255, 204, 204));
        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 204, 255));
        jLabel15.setText("Owner  ");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        refnot.setBackground(new java.awt.Color(189, 76, 84));
        refnot.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        refnot.setForeground(new java.awt.Color(191, 191, 191));
        refnot.setText("C0000");
        refnot.setBorder(null);
        refnot.setEnabled(false);
        refnot.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                refnotFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                refnotFocusLost(evt);
            }
        });
        refnot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                refnotKeyPressed(evt);
            }
        });
        jPanel2.add(refnot, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 300, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ref. No.");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 80, 20));

        text7.setBackground(new java.awt.Color(189, 76, 84));
        text7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        text7.setForeground(new java.awt.Color(255, 204, 204));
        text7.setBorder(null);
        jPanel2.add(text7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 318, 250, 10));
        jPanel2.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 464, 300, 20));
        jPanel2.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 300, 20));
        jPanel2.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 196, 300, 20));
        jPanel2.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 262, 300, 20));
        jPanel2.add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 328, 300, 20));
        jPanel2.add(jSeparator15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 398, 300, 20));

        namet1.setBackground(new java.awt.Color(189, 76, 84));
        namet1.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        namet1.setForeground(new java.awt.Color(191, 191, 191));
        namet1.setToolTipText("");
        namet1.setBorder(null);
        namet1.setCaretColor(new java.awt.Color(255, 255, 255));
        namet1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                namet1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                namet1FocusLost(evt);
            }
        });
        namet1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namet1ActionPerformed(evt);
            }
        });
        namet1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                namet1KeyPressed(evt);
            }
        });
        jPanel2.add(namet1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 242, 300, -1));

        jPanel3.setBackground(new java.awt.Color(189, 76, 84));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });

        home.setBackground(new java.awt.Color(73, 31, 61));
        home.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setText(" Home ");
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });
        jPanel3.add(home);

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 574, 110, 40));

        jPanel5.setBackground(new java.awt.Color(189, 76, 84));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });

        save.setBackground(new java.awt.Color(73, 31, 61));
        save.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText(" Save ");
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });
        jPanel5.add(save);

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 574, 110, 40));

        niclab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        niclab.setForeground(new java.awt.Color(73, 31, 61));
        jPanel2.add(niclab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 180, 30));

        namelab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        namelab.setForeground(new java.awt.Color(73, 31, 61));
        jPanel2.add(namelab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 180, 30));

        addresslab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        addresslab.setForeground(new java.awt.Color(73, 31, 61));
        jPanel2.add(addresslab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 180, 30));

        telelab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        telelab.setForeground(new java.awt.Color(73, 31, 61));
        jPanel2.add(telelab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 180, 30));

        datelab.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        datelab.setForeground(new java.awt.Color(73, 31, 61));
        jPanel2.add(datelab, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, 180, 30));

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addresstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addresstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addresstActionPerformed

    private void tptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tptActionPerformed

    private void maketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maketActionPerformed

    private void datetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datetActionPerformed
    
    public void savevehicle(){
        //For vehicles
        String regno = regnot.getText();
        String category = categoryt.getText();
        String make = maket.getText();
        String model = modelt.getText();
        String manuy = manuyt.getText();
        String regy = regyt.getText();
        String milage = milaget.getText();
        String price = pricet.getText();
        
        //For owners
        String refno = refnot.getText();
        String nic = nict.getText();
        String name = namet1.getText();
        String address = addresst.getText();
        String tp = tpt.getText();
        String date = datet.getText();
        String regno1 = regnot.getText();
        String status = "Available";
        try {
            if(refno.equals("") || nic.equals("") || name.equals("") || address.equals("") || tp.equals("")
                        || date.equals("") || regno1.equals("") || category.equals("") || make.equals("") || model.equals("") || manuy.equals("") ||regy.equals("") || milage.equals("") || price.equals("") ){
                    JOptionPane.showMessageDialog(this,"All required fields are mandatory"); 
              }
            else{
                if(regnolab.getText().equals("") && categorylab.getText().equals("") &&  makelab.getText().equals("") && modellab.getText().equals("") && manuylab.getText().equals("") && regylab.getText().equals("") 
                        && milagelab.getText().equals("") && pricelab.getText().equals("") && niclab.getText().equals("") && namelab.getText().equals("") && addresslab.getText().equals("") && telelab.getText().equals("") && datelab.getText().equals("")){   
                    pst_regno = con.prepareStatement("SELECT * from vehicle WHERE RegNo=?");
                    pst_regno.setString(1,regnot.getText());
                    rs_regno = pst_regno.executeQuery();

                    pst_vehicle1 = con.prepareStatement("SELECT * from vehicle WHERE RegNo=? AND Status='Available'");
                    pst_vehicle1.setString(1,regnot.getText());
                    rs_vehicle1 = pst_vehicle1.executeQuery();

                    pst_id = con.prepareStatement("SELECT * from owner WHERE NIC=?");
                    pst_id.setString(1,nict.getText());
                    rs_id = pst_id.executeQuery();

                    if(!rs_vehicle1.next()){
                        int OwnerStatus = 1;
                        int VehicleStatus = 1;
                        if(rs_regno.next()==false){
                            VehicleStatus = 0;
                        }
                        if(rs_id.next()==false){
                            OwnerStatus = 0;
                        }

                        Statement stm = con.createStatement();
                        if(VehicleStatus == 0 && OwnerStatus == 0){
                            String sql_owner ="INSERT INTO owner VALUES('"+nic+"','"+name+"','"+address+"','"+tp+"')";
                            String sql_vehicle ="INSERT INTO vehicle VALUES('"+regno+"','"+make+"','"+model+"','"+manuy+"','"+regy+"','"+category+"','"+status+"')";
                            stm.executeUpdate(sql_owner);
                            stm.executeUpdate(sql_vehicle);
                        }else{
                            if(VehicleStatus == 0 && OwnerStatus == 1){
                                String sql_owner = "UPDATE owner SET Name = '"+name+"',Address = '"+address+"',Tele = '"+tp+"' WHERE NIC = '"+nic+"'";
                                String sql_vehicle ="INSERT INTO vehicle VALUES('"+regno+"','"+make+"','"+model+"','"+manuy+"','"+regy+"','"+category+"','"+status+"')";
                                stm.executeUpdate(sql_vehicle);
                                stm.executeUpdate(sql_owner);
                            }else{
                                if(VehicleStatus == 1 && OwnerStatus == 0){
                                    String sql_vehicle = "UPDATE vehicle SET Status = '"+status+"' WHERE RegNo = '"+regno+"'";
                                    String sql_owner ="INSERT INTO owner VALUES('"+nic+"','"+name+"','"+address+"','"+tp+"')";
                                    stm.executeUpdate(sql_owner);
                                    stm.executeUpdate(sql_vehicle);
                                }else{
                                    String sql_owner = "UPDATE owner SET Name = '"+name+"',Address = '"+address+"',Tele = '"+tp+"' WHERE NIC = '"+nic+"'";
                                    String sql_vehicle = "UPDATE vehicle SET Status = '"+status+"' WHERE RegNo = '"+regno+"'";
                                    stm.executeUpdate(sql_owner);
                                    stm.executeUpdate(sql_vehicle);
                                }
                            }   
                        }
                        String sql_enter ="INSERT INTO enter VALUES('"+refno+"','"+nic+"','"+regno+"','"+date+"','"+milage+"','"+price+"')";
                        stm.executeUpdate(sql_enter);
                        JOptionPane.showMessageDialog(this,"Recorded added successfully");
                        autorefNo();
                        categoryt.setText("");
                        maket.setText("");
                        modelt.setText("");
                        manuyt.setText("YYYY");
                        regyt.setText("YYYY");
                        milaget.setText("0000000");
                        pricet.setText("");
                        nict.setText("");
                        addresst.setText("");
                        namet1.setText("");
                        tpt.setText("0XXXXXXXXX OR +94XXXXXXXXX");
                        datet.setText("YYYY-MM-DD");
                        regnot.setText("NN-NNNN, LL-NNNN, LLLNNNN");
                        datelab.setText("");
                        regnot.requestFocus();
                    }else{
                        JOptionPane.showMessageDialog(this,"This vehicle is already available");
                    }
                }else{
                    JOptionPane.showMessageDialog(this,"Invalid entry!");
                }
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(Enter.class.getName()).log(Level.SEVERE, null, ex);
        }     
    }
    
    void datevalidation(){
            String PATTERN1 = "^[0-9]{4,4}[-][0][0-9]{1,1}[-][012]{1,1}[0-9]{1,1}$";
            String PATTERN2 = "^[0-9]{4,4}[-][1][0-2]{1,1}[-][012]{1,1}[0-9]{1,1}$";
            String PATTERN3 = "^[0-9]{4,4}[-][0][0-9]{1,1}[-][3][01]{1,1}$";
            String PATTERN4 = "^[0-9]{4,4}[-][1][0-2]{1,1}[-][3][01]{1,1}$";
            Pattern patt1=Pattern.compile(PATTERN1);
            Pattern patt2=Pattern.compile(PATTERN2);
            Pattern patt3=Pattern.compile(PATTERN3);
            Pattern patt4=Pattern.compile(PATTERN4);
            Matcher match1=patt1.matcher(datet.getText());
            Matcher match2=patt2.matcher(datet.getText());
            Matcher match3=patt3.matcher(datet.getText());
            Matcher match4=patt4.matcher(datet.getText());

            if(!(match1.matches()||match2.matches()||match3.matches()||match4.matches())){
                datelab.setText("*YYYY-MM-DD");
            }else{
                datelab.setText("");
            }
            savevehicle();
    }
    
    private void datetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datetKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            datevalidation();
        }
    }//GEN-LAST:event_datetKeyPressed

    private void regnotKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_regnotKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            categoryt.requestFocus();
        }
        
    }//GEN-LAST:event_regnotKeyPressed

    private void categorytKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categorytKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            maket.requestFocus();
        }
    }//GEN-LAST:event_categorytKeyPressed

    private void maketKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_maketKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            modelt.requestFocus();
        }
    }//GEN-LAST:event_maketKeyPressed

    private void modeltKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modeltKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            manuyt.requestFocus();
        }
    }//GEN-LAST:event_modeltKeyPressed

    private void manuytKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_manuytKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            regyt.requestFocus();
        } 
    }//GEN-LAST:event_manuytKeyPressed

    private void regytKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_regytKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            milaget.requestFocus();
        } 
    }//GEN-LAST:event_regytKeyPressed

    void autoFillVehicle(String Regno){
        try {
            pst_vehicle = con.prepareStatement("SELECT * FROM vehicle WHERE RegNo = ?");
            pst_vehicle.setString(1,Regno);
            rs_vehicle = pst_vehicle.executeQuery();
            if(rs_vehicle.next()){
                String Category = rs_vehicle.getString("Category");
                String Make = rs_vehicle.getString("Make");
                String Model = rs_vehicle.getString("Model");
                String Manu_Year = rs_vehicle.getString("ManuYear");
                String Reg_Year = rs_vehicle.getString("RegYear");

                categoryt.setText(Category);
                maket.setText(Make);
                modelt.setText(Model);
                manuyt.setText(Manu_Year);
                regyt.setText(Reg_Year);
            }
                    
        } catch (SQLException ex) {
            Logger.getLogger(Enter.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void autoFillOwner(String nic){
        try {
            pst_owner = con.prepareStatement("SELECT * FROM owner WHERE NIC = ?");
            pst_owner.setString(1,nic);
            rs_owner = pst_owner.executeQuery();
            if(rs_owner.next()){
                String Name = rs_owner.getString("Name");
                String Address = rs_owner.getString("Address");
                String TP = rs_owner.getString("Tele");

                namet1.setText(Name);
                addresst.setText(Address);
                tpt.setText(TP);
            }
                    
        } catch (SQLException ex) {
            Logger.getLogger(Enter.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void milagetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_milagetKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            pricet.requestFocus();
        }
    }//GEN-LAST:event_milagetKeyPressed

    private void pricetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pricetKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            nict.requestFocus();
        }
    }//GEN-LAST:event_pricetKeyPressed

    private void nictKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nictKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            namet1.requestFocus();
        }
    }//GEN-LAST:event_nictKeyPressed

    private void addresstKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addresstKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            tpt.requestFocus();
        }
    }//GEN-LAST:event_addresstKeyPressed

    private void tptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tptKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            datet.requestFocus();
        }
    }//GEN-LAST:event_tptKeyPressed

    private void manuytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manuytActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manuytActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        Welcome jf = new Welcome();
        jf.show();
        dispose();
    }//GEN-LAST:event_homeMouseClicked

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        datevalidation();
    }//GEN-LAST:event_saveMouseClicked

    private void regnotFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_regnotFocusGained
        regnolab.setText("");
         
        if(regnot.getText().equals("NN-NNNN, LL-NNNN, LLLNNNN")){
           regnot.setText(null);
           regnot.requestFocus();
            
       }
        
    }//GEN-LAST:event_regnotFocusGained

    private void regnotFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_regnotFocusLost
        autoFillVehicle(regnot.getText());
        if(regnot.getText().length()==0){
           regnot.setText("NN-NNNN, LL-NNNN, LLLNNNN");
       }
       String PATTERN1 = "^[0-9]{2,2}[-][0-9]{4,4}$";
       String PATTERN2 = "^[A-Z]{2,2}[-][0-9]{4,4}$";
       String PATTERN3 = "^[A-Z]{3,3}[0-9]{4,4}$";
       String PATTERN4 = "^[0-9]{3,3}[-][0-9]{4,4}";
       Pattern patt1=Pattern.compile(PATTERN1);
       Pattern patt2=Pattern.compile(PATTERN2);
       Pattern patt3=Pattern.compile(PATTERN3);
       Pattern patt4=Pattern.compile(PATTERN4);
       Matcher match1=patt1.matcher(regnot.getText());
       Matcher match2=patt2.matcher(regnot.getText());
       Matcher match3=patt3.matcher(regnot.getText());
       Matcher match4=patt4.matcher(regnot.getText());
       
       if(!(match1.matches()||match2.matches()||match3.matches()||match4.matches())){
           regnolab.setText("*Invalid registation number");
       }else{
           regnolab.setText("");
       }
    }//GEN-LAST:event_regnotFocusLost

    private void maketFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_maketFocusGained
        makelab.setText("");
        maket.requestFocus();
    }//GEN-LAST:event_maketFocusGained

    private void maketFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_maketFocusLost
       String PATTERN1 = "^[A-Za-z]{0,12}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Matcher match1=patt1.matcher(maket.getText());
       if(!match1.matches()){
           makelab.setText("*Invalid enrity.");
       }else{
           makelab.setText("");
       }
    }//GEN-LAST:event_maketFocusLost

    private void manuytFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_manuytFocusGained
       
        manuylab.setText("");
        if(manuyt.getText().equals("YYYY")){
           manuyt.setText(null);
           manuyt.requestFocus();   
       }   
    }//GEN-LAST:event_manuytFocusGained

    private void manuytFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_manuytFocusLost
       if(manuyt.getText().length()==0){
           manuyt.setText("YYYY");
       }
       String PATTERN1 = "^[0-9]{4,4}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Matcher match1=patt1.matcher(manuyt.getText());
       if(!match1.matches()){
           manuylab.setText("*Invalid entry.");
       }else{
           manuylab.setText("");
       }
    }//GEN-LAST:event_manuytFocusLost

    private void regytFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_regytFocusGained
       
        regylab.setText("");
        if(regyt.getText().equals("YYYY")){
           regyt.setText(null);
           regyt.requestFocus();   
       }
    }//GEN-LAST:event_regytFocusGained

    private void regytFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_regytFocusLost
       if(regyt.getText().length()==0){
           //FontStyle(regnot);
           regyt.setText("YYYY");
       }
       String PATTERN1 = "^[0-9]{4,4}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Matcher match1=patt1.matcher(regyt.getText());
       if(!match1.matches()){
           regylab.setText("*Invalid entry.");
       }else{
           regylab.setText("");
       }
    }//GEN-LAST:event_regytFocusLost

    private void milagetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_milagetFocusGained
        milagelab.setText("");
        if(milaget.getText().equals("0000000")){
           milaget.setText(null);
           milaget.requestFocus();   
       }
    }//GEN-LAST:event_milagetFocusGained

    private void milagetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_milagetFocusLost
       String PATTERN1 = "^[0-9]{0,6}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Matcher match1=patt1.matcher(milaget.getText());
       if(!match1.matches()){
           milagelab.setText("*Invalid entry.");
       }else{
           milagelab.setText("");
       }
    }//GEN-LAST:event_milagetFocusLost

    private void tptFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tptFocusGained
        telelab.setText("");
        if(tpt.getText().equals("0XXXXXXXXX OR +94XXXXXXXXX")){
           tpt.setText(null);
           tpt.requestFocus();   
       }
    }//GEN-LAST:event_tptFocusGained

    private void tptFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tptFocusLost
       if(tpt.getText().length()==0){
           tpt.setText("0XXXXXXXXX OR +94XXXXXXXXX");
       }
       String PATTERN1 = "^[+][9][4][0-9]{9,9}$";
       String PATTERN2 = "^[0][0-9]{9,9}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Pattern patt2=Pattern.compile(PATTERN2);
       Matcher match1=patt1.matcher(tpt.getText());
       Matcher match2=patt2.matcher(tpt.getText());
       
       if(!(match1.matches()||match2.matches())){
           telelab.setText("*Invalid Telephone number");
       }else{
           telelab.setText("");
       }
    }//GEN-LAST:event_tptFocusLost

    private void datetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_datetFocusGained
        datelab.setText("");
        if(datet.getText().equals("YYYY-MM-DD")){
           datet.setText(null);
           datet.requestFocus();  
       }
    }//GEN-LAST:event_datetFocusGained

    private void datetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_datetFocusLost
       if(datet.getText().length()==0){
           datet.setText("YYYY-MM-DD");
       }
    }//GEN-LAST:event_datetFocusLost

    private void refnotFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_refnotFocusGained
         autorefNo();
       
    }//GEN-LAST:event_refnotFocusGained

    private void refnotFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_refnotFocusLost
       
    }//GEN-LAST:event_refnotFocusLost

    private void refnotKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_refnotKeyPressed
         if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            nict.requestFocus();
        }
    }//GEN-LAST:event_refnotKeyPressed

    private void regnotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regnotMouseClicked
        
    }//GEN-LAST:event_regnotMouseClicked

    private void namet1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namet1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namet1ActionPerformed

    private void namet1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namet1KeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            addresst.requestFocus();
        }
    }//GEN-LAST:event_namet1KeyPressed

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        datevalidation();
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        Welcome jf = new Welcome();
        jf.show();
        dispose();
    }//GEN-LAST:event_jPanel3MouseClicked

    private void regnotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regnotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regnotActionPerformed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    private void nictFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nictFocusLost
       autoFillOwner(nict.getText());
       String PATTERN1 = "^[0-9]{9,9}[vVxX]{1,1}$";
       String PATTERN2 = "^[0-9]{12,12}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Pattern patt2=Pattern.compile(PATTERN2);
       Matcher match1=patt1.matcher(nict.getText());
       Matcher match2=patt2.matcher(nict.getText());
       
       if(!(match1.matches()||match2.matches())){
           niclab.setText("*Invalid NIC number");
       }else{
           niclab.setText("");
       }
    }//GEN-LAST:event_nictFocusLost

    private void regnotKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_regnotKeyReleased
       
    }//GEN-LAST:event_regnotKeyReleased

    private void categorytFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_categorytFocusLost
       String PATTERN1 = "^[a-zA-Z]{0,12}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Matcher match1=patt1.matcher(categoryt.getText());
       if(!match1.matches()){
           categorylab.setText("*Invalid entry.");
       }else{
           categorylab.setText("");
       }
    }//GEN-LAST:event_categorytFocusLost

    private void modeltFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_modeltFocusGained
        modellab.setText("");
    }//GEN-LAST:event_modeltFocusGained

    private void modeltFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_modeltFocusLost
       String PATTERN1 = "^[a-zA-Z0-9]{0,20}$";
       String PATTERN2 = "^[a-zA-Z0-9]{0,20}[ ][a-zA-Z0-9]{0,20}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Pattern patt2=Pattern.compile(PATTERN2);
       Matcher match1=patt1.matcher(modelt.getText());
       Matcher match2=patt2.matcher(modelt.getText());
       if(!(match1.matches()||match2.matches())){
           modellab.setText("*Invalid entry.");
       }else{
           modellab.setText("");
       }
    }//GEN-LAST:event_modeltFocusLost

    private void pricetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pricetFocusGained
        pricelab.setText("");
    }//GEN-LAST:event_pricetFocusGained

    private void pricetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pricetFocusLost
       String PATTERN1 = "^[0-9]{0,13}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Matcher match1=patt1.matcher(pricet.getText());
       if(!match1.matches()){
           pricelab.setText("*Invalid entry.");
       }else{
           pricelab.setText("");
       }
    }//GEN-LAST:event_pricetFocusLost

    private void categorytFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_categorytFocusGained
        categorylab.setText("");
    }//GEN-LAST:event_categorytFocusGained

    private void nictFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nictFocusGained
        niclab.setText("");
    }//GEN-LAST:event_nictFocusGained

    private void namet1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_namet1FocusGained
        namelab.setText("");
    }//GEN-LAST:event_namet1FocusGained

    private void namet1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_namet1FocusLost
       String PATTERN1 = "^[A-Za-z.]{0,20}$";
       String PATTERN2 = "^[A-Za-z.]{0,20}[ ][A-Za-z]{0,20}$";
       String PATTERN3 = "^[A-Za-z.]{0,20}[ ][A-Za-z]{0,20}[ ][A-Za-z]{0,20}$";
       String PATTERN4 = "^[A-Za-z.]{0,20}[ ][A-Za-z]{0,20}[ ][A-Za-z]{0,20}[ ][A-Za-z]{0,20}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Pattern patt2=Pattern.compile(PATTERN2);
       Pattern patt3=Pattern.compile(PATTERN3);
       Pattern patt4=Pattern.compile(PATTERN4);
       Matcher match1=patt1.matcher(namet1.getText());
       Matcher match2=patt2.matcher(namet1.getText());
       Matcher match3=patt3.matcher(namet1.getText());
       Matcher match4=patt4.matcher(namet1.getText());
       
       if(!(match1.matches()||match2.matches()||match3.matches()||match4.matches())){
           namelab.setText("*Invalid entry");
       }else{
           namelab.setText("");
       }
    }//GEN-LAST:event_namet1FocusLost

    private void addresstFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addresstFocusGained
        addresslab.setText("");
    }//GEN-LAST:event_addresstFocusGained

    private void addresstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addresstFocusLost
       String PATTERN1 = "^[A-Za-z0-9/: ]{0,20}$";
       String PATTERN2 = "^[A-Za-z0-9/: ]{0,20}[,][A-Za-z0-9/ ]{0,20}$";
       String PATTERN3 = "^[A-Za-z0-9/: ]{0,20}[,][A-Za-z0-9/ ]{0,20}[,][A-Za-z0-9/ ]{0,20}$";
       String PATTERN4 = "^[A-Za-z0-9/: ]{0,20}[,][A-Za-z0-9/ ]{0,20}[,][A-Za-z0-9/ ]{0,20}[,][A-Za-z0-9/ ]{0,20}$";
       Pattern patt1=Pattern.compile(PATTERN1);
       Pattern patt2=Pattern.compile(PATTERN2);
       Pattern patt3=Pattern.compile(PATTERN3);
       Pattern patt4=Pattern.compile(PATTERN4);
       Matcher match1=patt1.matcher(addresst.getText());
       Matcher match2=patt2.matcher(addresst.getText());
       Matcher match3=patt3.matcher(addresst.getText());
       Matcher match4=patt4.matcher(addresst.getText());
       
       if(!(match1.matches()||match2.matches()||match3.matches()||match4.matches())){
           addresslab.setText("*Invalid entry");
       }else{
           addresslab.setText("");
       }
    }//GEN-LAST:event_addresstFocusLost

    private void tptAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_tptAncestorResized
        // TODO add your handling code here:
    }//GEN-LAST:event_tptAncestorResized

    private void modeltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeltActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modeltActionPerformed

    private void categorytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorytActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categorytActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Enter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Enter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Enter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Enter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Enter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addresslab;
    private javax.swing.JTextField addresst;
    private javax.swing.JLabel categorylab;
    private javax.swing.JTextField categoryt;
    private javax.swing.JLabel datelab;
    private javax.swing.JTextField datet;
    private javax.swing.JLabel home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel makelab;
    private javax.swing.JTextField maket;
    private javax.swing.JLabel manuylab;
    private javax.swing.JTextField manuyt;
    private javax.swing.JLabel milagelab;
    private javax.swing.JTextField milaget;
    private javax.swing.JLabel modellab;
    private javax.swing.JTextField modelt;
    private javax.swing.JLabel namelab;
    private javax.swing.JTextField namet1;
    private javax.swing.JLabel niclab;
    private javax.swing.JTextField nict;
    private javax.swing.JLabel pricelab;
    private javax.swing.JTextField pricet;
    private javax.swing.JTextField refnot;
    private javax.swing.JLabel regnolab;
    private javax.swing.JTextField regnot;
    private javax.swing.JLabel regylab;
    private javax.swing.JTextField regyt;
    private javax.swing.JLabel save;
    private javax.swing.JLabel telelab;
    private javax.swing.JTextField text7;
    private javax.swing.JTextField tpt;
    // End of variables declaration//GEN-END:variables
}
